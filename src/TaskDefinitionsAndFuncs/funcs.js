export const calculator = {
  name: "calculator",
  func: 'function (s) {\r\n  const stack = [];\r\n  const chars = s.split("");\r\n  let num = "",\r\n    pop = "";\r\n\r\n  const helper = (n1, n2, sign) => {\r\n    switch (sign) {\r\n      case "*":\r\n        return n1 * n2;\r\n      case "/":\r\n        return n1 / n2;\r\n      case "+":\r\n        return n1 + n2;\r\n      case "-":\r\n        return n1 - n2;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  const operator = (s1, s2, inp) => {\r\n    let num1, num2;\r\n    const out = [];\r\n    pop = inp.shift();\r\n    while (pop != undefined) {\r\n      if (pop === s1 || pop === s2) {\r\n        num1 = out.pop();\r\n        num2 = inp.shift();\r\n        out.push(helper(num1, num2, pop));\r\n      } else out.push(pop);\r\n      pop = inp.shift();\r\n    }\r\n    return [...out];\r\n  };\r\n\r\n  const calculate = () => {\r\n    const op = [];\r\n    //reverse because op should start from left\r\n    pop = stack.pop();\r\n    while (pop !== "(" && pop != undefined) {\r\n      op.unshift(pop);\r\n      pop = stack.pop();\r\n    }\r\n    //remove first parnthesis\r\n    if (op[0] === "(") op.shift();\r\n    //multiply and divide first, then add and substract\r\n    return operator("+", "-", [...operator("*", "/", [...op])])[0];\r\n  };\r\n\r\n  const handleParanthesis = () => {\r\n    for (const char of chars) {\r\n      if (char === " ") continue;\r\n      if (+char < 10) {\r\n        num += char;\r\n        continue;\r\n      }\r\n      if (num !== "") {\r\n        stack.push(+num);\r\n        num = "";\r\n      }\r\n\r\n      if (char === "-" && typeof stack[stack.length - 1] !== "number") {\r\n        num += char;\r\n        continue;\r\n      }\r\n\r\n      if (char === ")") {\r\n        stack.push(calculate());\r\n        continue;\r\n      }\r\n\r\n      stack.push(char);\r\n    }\r\n\r\n    if (num !== "") {\r\n      stack.push(+num);\r\n      //calculate\r\n    }\r\n  };\r\n\r\n  handleParanthesis();\r\n\r\n  return calculate();\r\n}',
};

export const biggestAscending = {
  name: "biggestAscending",
  func: 'function (num) {\r\n  if (typeof num === "number") num += "";\r\n\r\n  const l = num.length;\r\n  const digits = num.split("");\r\n  let i = l - 1;\r\n\r\n  while (i > 0) {\r\n    if (digits[i] < digits[i - 1]) {\r\n      for (let k = i; k < l; k++) digits[k] = 9;\r\n      digits[i - 1]--;\r\n    }\r\n    i--;\r\n  }\r\n  while (!digits[0] && digits.length) digits.shift();\r\n  return digits.join("");\r\n}',
};
